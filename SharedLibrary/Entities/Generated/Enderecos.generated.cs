//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v1.3.0.6
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace SharedLibrary
{
   public partial class Enderecos
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected Enderecos()
      {
         // NOTE: This class has one-to-one associations with Enderecos.
         // One-to-one associations are not validated in constructors since this causes a scenario where each one must be constructed before the other.

         Init();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="cod_municipio"></param>
      /// <param name="cep"></param>
      /// <param name="nome_distrito"></param>
      /// <param name="endereco"></param>
      /// <param name="numero"></param>
      /// <param name="complemento"></param>
      /// <param name="bairro"></param>
      /// <param name="municipio"></param>
      public Enderecos(string cod_municipio, int cep, string nome_distrito, string endereco, int numero, string complemento, string bairro, global::SharedLibrary.Municipio municipio)
      {
         // NOTE: This class has one-to-one associations with Enderecos.
         // One-to-one associations are not validated in constructors since this causes a scenario where each one must be constructed before the other.

         if (string.IsNullOrEmpty(cod_municipio)) throw new ArgumentNullException(nameof(cod_municipio));
         this.Cod_Municipio = cod_municipio;
         this.CEP = cep;
         if (string.IsNullOrEmpty(nome_distrito)) throw new ArgumentNullException(nameof(nome_distrito));
         this.Nome_Distrito = nome_distrito;
         if (string.IsNullOrEmpty(endereco)) throw new ArgumentNullException(nameof(endereco));
         this.Endereco = endereco;
         this.Numero = numero;
         if (string.IsNullOrEmpty(complemento)) throw new ArgumentNullException(nameof(complemento));
         this.Complemento = complemento;
         if (string.IsNullOrEmpty(bairro)) throw new ArgumentNullException(nameof(bairro));
         this.Bairro = bairro;
         if (municipio == null) throw new ArgumentNullException(nameof(municipio));
         this.Municipio = municipio;

         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="cod_municipio"></param>
      /// <param name="cep"></param>
      /// <param name="nome_distrito"></param>
      /// <param name="endereco"></param>
      /// <param name="numero"></param>
      /// <param name="complemento"></param>
      /// <param name="bairro"></param>
      /// <param name="municipio"></param>
      public static Enderecos Create(string cod_municipio, int cep, string nome_distrito, string endereco, int numero, string complemento, string bairro, global::SharedLibrary.Municipio municipio)
      {
         return new Enderecos(cod_municipio, cep, nome_distrito, endereco, numero, complemento, bairro, municipio);
      }

      /*************************************************************************
       * Persistent properties
       *************************************************************************/

      /// <summary>
      /// Identity, Required, Indexed
      /// </summary>
      [Key]
      [Required]
      public int Cod_Endereco { get; private set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public string Cod_Municipio { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public int CEP { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public string Nome_Distrito { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public string Endereco { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public int Numero { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public string Complemento { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public string Bairro { get; set; }

      /*************************************************************************
       * Persistent navigation properties
       *************************************************************************/

      /// <summary>
      /// Required
      /// </summary>
      public virtual global::SharedLibrary.Escola Escola { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      public virtual global::SharedLibrary.Municipio Municipio { get; set; }

   }
}

