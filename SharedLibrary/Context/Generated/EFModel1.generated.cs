//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v1.3.0.6
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace SharedLibrary
{
   /// <inheritdoc/>
   public partial class EFModel1 : Microsoft.EntityFrameworkCore.DbContext
   {
      #region DbSets
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::SharedLibrary.Censo_Escola> Censo_Escola { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::SharedLibrary.CorreioEletronico> CorreioEletronico { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::SharedLibrary.Enderecos> Enderecos { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::SharedLibrary.Escola> Escola { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::SharedLibrary.Estado> Estado { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::SharedLibrary.MantenedoraDaEscola> MantenedoraDaEscola { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::SharedLibrary.Municipio> Municipio { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::SharedLibrary.Regiao> Regiao { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::SharedLibrary.Telefone> Telefone { get; set; }
      #endregion DbSets

      /// <inheritdoc />
      public EFModel1(DbContextOptions<EFModel1> options) : base(options)
      {
      }

      partial void CustomInit(DbContextOptionsBuilder optionsBuilder);

      /// <inheritdoc />
      protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
      {
         CustomInit(optionsBuilder);
      }

      partial void OnModelCreatingImpl(ModelBuilder modelBuilder);
      partial void OnModelCreatedImpl(ModelBuilder modelBuilder);

      /// <inheritdoc />
      protected override void OnModelCreating(ModelBuilder modelBuilder)
      {
         base.OnModelCreating(modelBuilder);
         OnModelCreatingImpl(modelBuilder);

         modelBuilder.HasDefaultSchema("SQLite");

         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .ToTable("Censo_Escola")
                     .HasKey(t => new { t.Cod_Entidade, t.Ano });
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Cod_Entidade)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Ano)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.ID_Dependencia_Adm)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Dependencia_Administrativa)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Rede)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.DataInicioAnoLetivo)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.DataFimAnoLetivo)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Situacao_Funcionamento)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.EF_Organizado_Em_Ciclos)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Atividade_Complementar)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Documento_Regulamentacao)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Acessibilidade)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Dependencias_Pne)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Sanitario_Pne)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.AEE)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Num_Salas_Existentes)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Num_Salas_Usadas)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Num_Sala_Leitura)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Num_Funcionarios)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Educacao_Indigena)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Lingua_Indigena)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Lingua_Portuguesa)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Espaco_Turma_Pba)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Abre_Final_Semana)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Mod_Ens_Regular)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Mod_Educ_Especial)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .Property(t => t.Mod_Eja)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .HasOne(x => x.CorreioEletronico)
                     .WithOne()
                     .HasForeignKey<global::SharedLibrary.Censo_Escola>("CorreioEletronico_CorreioEletronico_Id")
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Censo_Escola>()
                     .HasMany(x => x.Telefone)
                     .WithOne()
                     .HasForeignKey("Telefone_Telefone_Id")
                     .IsRequired();

         modelBuilder.Entity<global::SharedLibrary.CorreioEletronico>()
                     .ToTable("CorreioEletronico")
                     .HasKey(t => new { t.Cod_Entidade, t.Ano });
         modelBuilder.Entity<global::SharedLibrary.CorreioEletronico>()
                     .Property(t => t.Cod_Entidade)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<global::SharedLibrary.CorreioEletronico>()
                     .Property(t => t.Ano)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<global::SharedLibrary.CorreioEletronico>()
                     .Property(t => t.Email)
                     .IsRequired();

         modelBuilder.Entity<global::SharedLibrary.Enderecos>()
                     .ToTable("Enderecos")
                     .HasKey(t => t.Cod_Endereco);
         modelBuilder.Entity<global::SharedLibrary.Enderecos>()
                     .Property(t => t.Cod_Endereco)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<global::SharedLibrary.Enderecos>()
                     .Property(t => t.Cod_Municipio)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Enderecos>()
                     .Property(t => t.CEP)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Enderecos>()
                     .Property(t => t.Nome_Distrito)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Enderecos>()
                     .Property(t => t.Endereco)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Enderecos>()
                     .Property(t => t.Numero)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Enderecos>()
                     .Property(t => t.Complemento)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Enderecos>()
                     .Property(t => t.Bairro)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Enderecos>()
                     .HasOne(x => x.Escola)
                     .WithOne(x => x.Endereco)
                     .HasForeignKey<global::SharedLibrary.Escola>("Endereco_Id")
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Enderecos>()
                     .HasOne(x => x.Municipio)
                     .WithMany(x => x.Endereco)
                     .HasForeignKey("Municipio_Id");

         modelBuilder.Entity<global::SharedLibrary.Escola>()
                     .ToTable("Escola")
                     .HasKey(t => t.Cod_Entidade);
         modelBuilder.Entity<global::SharedLibrary.Escola>()
                     .Property(t => t.Cod_Entidade)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<global::SharedLibrary.Escola>()
                     .Property(t => t.Cod_Endereco)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Escola>()
                     .Property(t => t.Localizacao)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Escola>()
                     .Property(t => t.Nome)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Escola>()
                     .Property(t => t.Categoria)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Escola>()
                     .Property(t => t.ID_Latitude)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Escola>()
                     .Property(t => t.ID_Longitude)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Escola>()
                     .Property(t => t.Instituicao_Sem_Fim_Lucrativo)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Escola>()
                     .HasOne(x => x.MantenedoraDaEscola)
                     .WithOne()
                     .HasForeignKey<global::SharedLibrary.Escola>("MantenedoraDaEscola_MantenedoraDaEscola_Id")
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Escola>()
                     .HasOne(x => x.Censo_Escola)
                     .WithMany(x => x.Escola)
                     .HasForeignKey("Censo_Escola_Id");

         modelBuilder.Entity<global::SharedLibrary.Estado>()
                     .ToTable("Estado")
                     .HasKey(t => t.Cod_Estado);
         modelBuilder.Entity<global::SharedLibrary.Estado>()
                     .Property(t => t.Cod_Estado)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<global::SharedLibrary.Estado>()
                     .Property(t => t.Cod_Regiao)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Estado>()
                     .Property(t => t.Nome_Estado)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Estado>()
                     .Property(t => t.UF)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Estado>()
                     .HasOne(x => x.Regiao)
                     .WithMany(x => x.Estado)
                     .HasForeignKey("Regiao_Id");

         modelBuilder.Entity<global::SharedLibrary.MantenedoraDaEscola>()
                     .ToTable("MantenedoraDaEscola")
                     .HasKey(t => t.Cod_Entidade);
         modelBuilder.Entity<global::SharedLibrary.MantenedoraDaEscola>()
                     .Property(t => t.Cod_Entidade)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<global::SharedLibrary.MantenedoraDaEscola>()
                     .Property(t => t.Empresa)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.MantenedoraDaEscola>()
                     .Property(t => t.Sindicato)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.MantenedoraDaEscola>()
                     .Property(t => t.Sistema_S_Sesi)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.MantenedoraDaEscola>()
                     .Property(t => t.Senai)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.MantenedoraDaEscola>()
                     .Property(t => t.Sesc)
                     .IsRequired();

         modelBuilder.Entity<global::SharedLibrary.Municipio>()
                     .ToTable("Municipio")
                     .HasKey(t => t.Cod_Municipio);
         modelBuilder.Entity<global::SharedLibrary.Municipio>()
                     .Property(t => t.Cod_Municipio)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<global::SharedLibrary.Municipio>()
                     .Property(t => t.PK_COD_MUNICIPIO_OLD)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Municipio>()
                     .Property(t => t.Nome_Municipio)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Municipio>()
                     .HasOne(x => x.Estado)
                     .WithMany(x => x.Municipio)
                     .HasForeignKey("Estado_Id");

         modelBuilder.Entity<global::SharedLibrary.Regiao>()
                     .ToTable("Regiao")
                     .HasKey(t => t.Cod_Regiao);
         modelBuilder.Entity<global::SharedLibrary.Regiao>()
                     .Property(t => t.Cod_Regiao)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<global::SharedLibrary.Regiao>()
                     .Property(t => t.Nome_Regiao)
                     .IsRequired();

         modelBuilder.Entity<global::SharedLibrary.Telefone>()
                     .ToTable("Telefone")
                     .HasKey(t => new { t.Numero, t.Ano, t.Cod_Entidade });
         modelBuilder.Entity<global::SharedLibrary.Telefone>()
                     .Property(t => t.Numero)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<global::SharedLibrary.Telefone>()
                     .Property(t => t.Ano)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<global::SharedLibrary.Telefone>()
                     .Property(t => t.Cod_Entidade)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<global::SharedLibrary.Telefone>()
                     .Property(t => t.DDD)
                     .IsRequired();
         modelBuilder.Entity<global::SharedLibrary.Telefone>()
                     .Property(t => t.FAX)
                     .IsRequired();

         OnModelCreatedImpl(modelBuilder);
      }
   }
}
